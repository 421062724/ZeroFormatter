<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
namespace ZeroFormatter.Internal
{
    using System;
    using System.Collections.Generic;
    using ZeroFormatter.Formatters;
    using ZeroFormatter.Internal;
    using ZeroFormatter.Segments;
    using UnityEngine;

    public static class ZeroFormatterInitializer
    {
        [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
        public static void Register()
        {
            // Enums
<# foreach(var g in Enums) { foreach(var t in g.Types) {   #>
            ZeroFormatter.Formatters.Formatter<<#= t.FullName #>>.Register(new <#= g.Namespace + "." + t.Name #>Formatter());
            ZeroFormatter.Comparers.ZeroFormatterEqualityComparer<<#= t.FullName #>>.Register(new <#= g.Namespace + "." + t.Name #>EqualityComparer());
<# } } #>
            // Objects
<# foreach(var g in Objects) { foreach(var t in g.Types) {   #>
            ZeroFormatter.Formatters.Formatter<<#= t.FullName #>>.Register(new <#= g.Namespace + "." + t.Name #>Formatter());
<# } } #>
        }
    }
}